name: Continuous Integration

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.CITOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      working-directory: backend
      run: npm install

    - name: Run tests and generate coverage
      working-directory: ./backend
      run: npm run test # Ensure this command configures Vitest to output coverage-summary.json in the backend/coverage folder

    # - name: Download previous coverage report
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: coverage-report
    #     path: ./previous-coverage
    #   continue-on-error: true # if not exist

    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v3
      with:
        name: coverage-report
        path: ./previous-coverage

    - name: Compare coverage reports
      run: |
        if [ -f "./previous-coverage/coverage-summary.json" ]; then
          current=$(jq '.total.lines.pct' ./backend/coverage/coverage-summary.json)
          previous=$(jq '.total.lines.pct' ./previous-coverage/coverage-summary.json)
          echo "Current Coverage: $current%"
          echo "Previous Coverage: $previous%"
          if [ $(echo "$current < $previous" | bc) -eq 1 ]; then
            echo "Coverage has decreased!"
            exit 1
          fi
        else
          echo "Previous coverage report not found. Assuming first build and passing."
        fi
    
    - name: Store current coverage report as previous for future comparison
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./backend/coverage/coverage-summary.json

    - name: Initialize formatting flag
      run: echo "FORMAT_NEEDED=false" >> $GITHUB_ENV

    - name: Get changed files
      id: files
      uses: jitterbit/get-changed-files@v1

    - name: Install Dependencies
      working-directory: backend
      run: npm install --save-dev prettier

    # Check and format backend code
    - name: Check and Format Backend Code
      if: contains(steps.files.outputs.all, 'backend/')
      working-directory: backend
      run: |
        npm run prettier-check || (npm run format && echo "FORMAT_NEEDED=true" >> $GITHUB_ENV)

    - name: Install Dependencies
      working-directory: frontend
      run: npm install

    - name: Install Dependencies
      working-directory: frontend
      run: npm install --save-dev prettier

    # Check and format frontend code
    - name: Check and Format Frontend Code
      if: contains(steps.files.outputs.all, 'frontend/')
      working-directory: frontend
      run: |
        npm run prettier-check || (npm run format && echo "FORMAT_NEEDED=true" >> $GITHUB_ENV)

    # Stage changes and commit if formatting was applied
    - name: Commit changes
      if: env.FORMAT_NEEDED == 'true'
      run: |
        git config --global user.email github-actions
        git config --global user.name github-actions@github.com
        git add -A
        git commit -m "chore: format code"
        git push
